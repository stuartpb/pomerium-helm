{{- $shouldLookupExistingSecrets := and .Values.config.lookupExistingSecrets (not .Values.config.forceGenerateSharedSecrets) -}}
{{- $existingSharedSecrets := and $shouldLookupExistingSharedSecrets (lookup "v1" "Secret" .Release.Namespace (template "pomerium.sharedSecrets.name" . )) -}}
{{- $existing_shared_secret := and $existingSharedSecrets $existingSharedSecrets.data.SHARED_SECRET ($existingSharedSecrets.data.SHARED_SECRET | b64dec) -}}
{{- $existing_cookie_secret := and $existingSharedSecrets $existingSharedSecrets.data.COOKIE_SECRET ($existingSharedSecrets.data.COOKIE_SECRET | b64dec) -}}
{{- $shared_secret := coalesce .Values.config.sharedSecret $existing_shared_secret (randAscii 32 | b64enc) -}}
{{- $cookie_secret := coalesce .Values.config.cookieSecret $existing_cookie_secret (randAscii 32 | b64enc) -}}

{{- $existingRedisSecret := and $shouldLookupExistingSecrets (lookup "v1" "Secret" .Release.Namespace .Values.redis.existingSecret) -}}
{{- $existingRedisPassword := and $existingRedisSecret (index $existingRedisSecret.data Values.redis.existingSecretPasswordKey | b64dec) -}}

{{/* Render redis password */}}
{{- define "pomerium.redis.password" -}}
{{- coalesce .Values.redis.password $existingRedisPassword ($shared_secret | sha256sum) -}}
{{- end -}}

{{/* Render redis scheme */}}
{{- define "pomerium.redis.scheme" -}}
{{- if .Values.redis.tls.enabled -}}
rediss
{{- else -}}
redis
{{- end -}}
{{- end -}}

{{- define "pomerium.redis.connectionString" -}}
{{include "pomerium.redis.scheme" .}}://:{{include "pomerium.redis.password" .}}@{{include "pomerium.redis.name" .}}-master.{{.Release.Namespace}}.svc.cluster.local:6379
{{- end -}}

{{- define "pomerium.databroker.storage.connectionString" -}}
{{- if .Values.databroker.storage.connectionString -}}
{{- .Values.databroker.storage.connectionString . -}}
{{- else if eq (include "pomerium.databroker.storage.type" . ) "redis" -}}
{{- include "pomerium.redis.connectionString" -}}
{{- end -}}
{{- end -}} 

{{- $generatingSharedSecrets := and .Values.config.generateSharedSecrets (or .Release.IsInstall .Values.config.forceGenerateSharedSecrets) -}}
{{- $defineSharedSecrets := or $generatingSharedSecrets .Values.config.sharedSecret .Values.config.cookieSecret -}}

{{- if $defineSharedSecrets -}}
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: {{ template "pomerium.name" . }}
    helm.sh/chart: {{ template "pomerium.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    helm.sh/hook-delete-policy: before-hook-creation
{{- if .Values.config.forceGenerateSharedSecrets }}
    helm.sh/hook: pre-upgrade
{{- else if .Values.config.generateSharedSecrets }}
    helm.sh/hook: pre-install
{{- end }}
  name: {{ template "pomerium.sharedSecret.name" . }}
type: Opaque
data:
{{- if or .Values.config.generateSharedSecrets .Values.config.sharedSecret }}
  SHARED_SECRET: {{ $shared_secret | b64enc }}
{{- end }}
{{- if or .Values.config.generateSharedSecrets .Values.config.cookieSecret }}
  COOKIE_SECRET: {{ $cookie_secret | b64enc }}
{{- end }}
{{- end }}
{{ if and .Values.databroker.storage.autoconfigure (ne (include "pomerium.databroker.storage.type" . ) "memory") }}
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: {{ template "pomerium.name" . }}
    helm.sh/chart: {{ template "pomerium.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    helm.sh/hook-delete-policy: before-hook-creation
{{- if .Values.config.forceGenerateSharedSecrets }}
    helm.sh/hook: pre-upgrade
{{- else if .Values.config.generateSharedSecrets }}
    helm.sh/hook: pre-install
{{- end }}
  name: {{ template "pomerium.databroker.storage.secret.name" . }}
type: Opaque
data:
  DATABROKER_STORAGE_CONNECTION_STRING: {{- include "pomerium.databroker.storage.connectionString" | b64enc }}
  DATABROKER_STORAGE_TLS_SKIP_VERIFY: {{ .Values.databroker.storage.tlsSkipVerify | b64enc }}
{{- end }}
{{ if .Values.redis.enabled -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.redis.existingSecret }}
type: Opaque
data:
  password: {{ include "pomerium.redis.password" . | b64enc }}
{{ end -}}
